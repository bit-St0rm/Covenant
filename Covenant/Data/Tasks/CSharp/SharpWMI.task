using System;
using System.IO;
using System.Reflection;

using SharpWMI;

public static class Task
{
    public static string Execute(string Command)
    {
        string output = "";
        try
        {
            TextWriter realStdOut = Console.Out;
            TextWriter realStdErr = Console.Error;
            TextWriter stdOutWriter = new StringWriter();
            TextWriter stdErrWriter = new StringWriter();
            Console.SetOut(stdOutWriter);
            Console.SetError(stdErrWriter);
            
            List<string> tempList = new List<string>();
            int spaceIndex = Command.IndexOf(" ");
            int quoteIndex = Command.IndexOf("\"");
            while (spaceIndex != -1 || quoteIndex != -1 ){
                string extractedString = "";
                if (spaceIndex < quoteIndex || quoteIndex == -1){
                    extractedString = Command.Substring(0,spaceIndex);
                    Command = Command.Substring(spaceIndex + 1);
                } else {
                    int tempSpaceIndex = Command.IndexOf(" ");
                    int nextQuoteIndex = Command.IndexOf("\"",quoteIndex);
                    while(tempSpaceIndex < nextQuoteIndex){
                        tempSpaceIndex = Command.IndexOf(" ", tempSpaceIndex);
                    }
                    extractedString = Command.Substring(0,tempSpaceIndex);
                    Command = Command.Substring(tempSpaceIndex + 1);
                }
                tempList.Add(extractedString);
                spaceIndex = Command.IndexOf(" ");
                quoteIndex = Command.IndexOf("\"");
            }
            tempList.Add(testString);
            string[] args = list.ToArray();
            
            typeof(Program).GetMethod("Main", BindingFlags.NonPublic | BindingFlags.Static).Invoke(null, new object[] { args });
            
            Console.Out.Flush();
            Console.Error.Flush();
            Console.SetOut(realStdOut);
            Console.SetError(realStdErr);
            
            output += stdOutWriter.ToString();
            output += stdErrWriter.ToString();
        }
        catch (Exception e) { output += e.GetType().FullName + ": " + e.Message + Environment.NewLine + e.StackTrace; }
        return output;
    }
}
